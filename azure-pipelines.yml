# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- QA
- dev

variables:
  imageName: 'lalitkr2506/azurerepo:$(build.buildNumber)'

  
stages:
- stage: build
  displayName: Build
  jobs:
  - job: Build
    pool:
      name: DemoAg
      demands:
        - Agent.Name -equals Agent-1
    steps:
      - task: SonarQubePrepare@5
        inputs:
          SonarQube: 'azSonar'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'mytestproject_dotnet-job'
          cliProjectName: 'DemoAg'
          cliSources: '.'
      - task: SonarQubeAnalyze@5
      - task: Docker@1
        displayName: 'Build an image'
        inputs:
          command: Build an image
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: dockerHub
          dockerFile: Dockerfile
          imageName: $(imageName)
          restartPolicy: always
      - task: Docker@1
        displayName: 'Push an image'
        inputs:
          command: Push an image
          containerregistrytype: 'Container Registry'
          dockerRegistryEndpoint: dockerHub
          dockerFile: Dockerfile
          imageName: $(imageName)
          restartPolicy: always
      - task: CmdLine@2
        inputs:
          script: 'ssh root@deployment docker run -itd --name dev$(imageName) $(imageName)'
# - stage: Deployment
#   dependsOn: "build"
#   displayName: Deployment
#   jobs:
#   - job: Deploy
#     pool:
#       name: 'DemoAg'
#       demands:
#         - Agent.Name -equals Deployment
#     steps:
#        - task: CmdLine@2
#          inputs:
#            script: 'docker run -itd $(imageName)'
